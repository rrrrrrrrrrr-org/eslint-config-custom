name: eslint npm publish workflow
on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type (one of): patch, minor, major, prepatch, preminor, premajor, prerelease'
        required: true

jobs:
  eslint_npm_publish:
    # github push 권한 추가
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.RRRRRRRRRRR_ORG_NPM_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.RRRRRRRRRRR_ORG_GITHUB_TOKEN }}
      RELEASE_TYPE: ${{ github.event.inputs.release-type }}
    steps:
      - name: 릴리즈 타입 체크 (patch, minor, major, prepatch, preminor, premajor, prerelease)
        if: env.RELEASE_TYPE != 'patch' && env.RELEASE_TYPE != 'minor' && env.RELEASE_TYPE != 'major' && env.RELEASE_TYPE != 'prepatch' && env.RELEASE_TYPE != 'preminor' && env.RELEASE_TYPE != 'premajor' && env.RELEASE_TYPE != 'prerelease'
        run: echo "Invalid release type. Please provide a valid release type."

      - name: 리포지토리 확인
        uses: actions/checkout@v4

      - name: Node.js 설치
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: pnpm
          registry-url: https://registry.npmjs.org

      - uses: pnpm/action-setup@v3
        name: pnpm 설치
        with:
          version: latest
          run_install: false

      - name: 릴리즈 커밋용 git config 수정
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: major, minor, patch 릴리즈 타입일 경우 버전 업데이트 처리
        if: startsWith(env.RELEASE_TYPE, 'pre') != true
        run: |
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
          pnpm dlx standard-version --release-as=${{ env.RELEASE_TYPE }} --releaseCommitMessageFormat="chore: release - {{currentTag}}\n[[$deployUrl]]"
        env:
          RELEASE_TYPE: ${{ env.RELEASE_TYPE }}

      - name: pre* 릴리즈 타입일 경우 patch 버전으로 업데이트 처리
        if: startsWith(env.RELEASE_TYPE, 'pre')
        run: |
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV
          pnpm dlx standard-version --release-as=patch --releaseCommitMessageFormat="chore: release - {{currentTag}}\n[[$deployUrl]]"
        env:
          RELEASE_TYPE: ${{ env.RELEASE_TYPE }}

      - name: npm 배포 전 태그 원격에 푸쉬
        # env:
        #   GITHUB_TOKEN: ${{ secrets.RRRRRRRRRRR_ORG_GITHUB_TOKEN }}
        run: git push --follow-tags origin main

      - name: npm 배포
        shell: bash
        run: |
          pnpm publish --access public
          echo ${{ env.RELEASE_TAG }}
        # env:
        #   NODE_AUTH_TOKEN: ${{ secrets.RRRRRRRRRRR_ORG_NPM_TOKEN }}
