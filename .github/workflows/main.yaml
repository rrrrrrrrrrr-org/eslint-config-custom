name: Eslint NPM Publish
on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type (one of): patch, minor, major, prepatch, preminor, premajor, prerelease'
        required: true

jobs:
  eslint_npm_publish:
    runs-on: ubuntu-latest
    # env:
    #   NPM_TOKEN: ${{ secrets.RRRRRRRRRRR_ORG_NPM_TOKEN }}
    steps:
      - name: Check if release type is valid
        if: github.event.inputs.release-type != 'patch' && github.event.inputs.release-type != 'minor' && github.event.inputs.release-type != 'major' && github.event.inputs.release-type != 'prepatch' && github.event.inputs.release-type != 'preminor' && github.event.inputs.release-type != 'premajor' && github.event.inputs.release-type != 'prerelease'
        run: echo "Invalid release type. Please provide a valid release type."

      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: latest
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: pnpm
          registry-url: https://registry.npmjs.org

      # - name: Install packages
      #   run: pnpm i --frozen-lockfile

      # Configure Git (bot용 이메일 주소 사용)
      - name: Git configuration
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      # Bump package version
      # Use tag latest
      - name: Bump release version
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
          pnpm dlx standard-version --release-as=${{ github.event.inputs.release-type }} --releaseCommitMessageFormat="chore(release): {{currentTag}}\n[[$deployUrl]]"
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Bump package pre-release version
      # Use tag beta for pre-release versions
      - name: Bump pre-release version
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV
          pnpm dlx standard-version --release-as=patch --releaseCommitMessageFormat="chore(release): {{currentTag}}\n[[$deployUrl]]"
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Push repository changes
      - name: Push changes to repository
        env:
          GITHUB_TOKEN: ${{ secrets.RRRRRRRRRRR_ORG_GITHUB_TOKEN }}
        run: |
          git push origin && git push --tags

      - name: Publish to npm
        shell: bash
        run: |
          pnpm publish --access public
          echo ${{ env.RELEASE_TAG }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.RRRRRRRRRRR_ORG_NPM_TOKEN }}
